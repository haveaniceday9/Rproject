write.table(iris, file = "iris.txt", row.names = FALSE, sep="\t")
iris.txt
# Save iris data frame as iris.txt file, row names is false to remove numbering, seperator is \t to represent tab
write.table(iris, file = "iris1.txt", row.names = FALSE, sep="\t")
# Save iris data frame as iris.txt file, row names is false to remove numbering, seperator is \t to represent tab
write.table(file = "iris.csv", file = "iris1.txt", row.names = FALSE, header=TRUE,sep="\t")
#Assuming iris.csv is in the default directory,read iris.csv into a data frame, to seperate column headings from data header is TRUE
iris <- read.csv(file = "iris.csv", header =TRUE)
#Assuming iris.csv is in the default directory,read iris.csv into a data frame, to seperate column headings from data header is TRUE
iris <- read.csv(file = "iris.csv", header =TRUE, stringsAsFactors=TRUE)
# Save iris data frame as iris.txt file, row names is false to remove numbering, seperator is \t to represent tab
write.table(iris, file = "iris1.txt", row.names = FALSE, sep="\t")
#b is the name of the list for q2.1) Sequence from 100 to 1000 with spaces of 100.
#2) As the order of the data is not specified providing 2 headers with 2 elements each results in a 2x2 data frame.
#3) The L following 999 specifies an integer
#4)The matrix contains numbers 1 to 50 with 10 rows and 5 columns, data order is not specified.
#5) A vector containg the first 3 letters
b <- list(seq(100,1000,by=100),data.frame(college = c("Notre Dame", "Syracus"), score= c (41, 24)), 999L, matrix(1:50, nrow= 10, ncol=5), c("a","b","c"))
# Save iris data frame as iris.txt file, row names is false to remove numbering, seperator is \t to represent tab, quote as false to prevent quotation marks around strings
write.table(iris, file = "iris1.txt", row.names = FALSE, sep="\t", quote =FALSE)
install.packages("cowplot")
dim(mpg)
ggplot(data=mpg, aes(x=displ, y=cty)) + geom_point()
library(ggplot2)
mpg = read.table("mpg.txt", header=TRUE, sep="\t", stringsAsFactors=FALSE)
ggplot(data=mpg, aes(x=displ, y=cty)) + geom_point()
#make a theme
theme_Lect24 <- function(){
theme_bw() +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
}
# challenge 1:
# A stacked bar plot showing counts of observations by tranmission type
# and year
ggplot(mpg, aes(x = trans, fill = as.factor(year))) +
geom_bar() +
xlab("Tranmission Type") +
theme_Lect24() +
theme(legend.title=element_blank())
#make a theme
library(ggplot2)
ggplot(mpg, aes(x=cyl, y=displ)) +
stat_summary(geom="bar", fun="mean") +
stat_summary(geom="errorbar", fun.data = "mean_se", width=0.3) +
ylab("Displacement (liters)") +
xlab("Cylinders") +
theme_bw()
library(ggplot2)
oxygen <- read.table(Oxygen.txt, header= T, setp = "/t")
oxygen <- read.table(Oxygen.txt, header= T, sep = "/t")
oxygen <- read.table("Oxygen.txt", header= T, sep = "/t")
oxygen <- read.table("Oxygen.txt", header= T, sep = "/t", stringsAsFactors=FALSE)
oxygen <- read.table("Oxygen.txt", header= T, sep = "\t", stringsAsFactors=FALSE)
oxygen
ggplot(oxygen, aes(x = o2, y = relflor))
ggplot(oxygen, aes(x = o2, y = relflor)) + geom_point()+
data <- read.table("data.txt", header= T, sep = ",", stringsAsFactors=FALSE)
data <- read.table("data.txt", header= T, sep = ",", stringsAsFactors=FALSE)
ggplot(oxygen, aes(x = o2, y = relflor)) + geom_point() +x_lab("Oxygen (%)")+y_lab("Relative Fluorescence")
ggplot(oxygen, aes(x = o2, y = relflor)) + geom_point() +xlab("Oxygen (%)")+ylab("Relative Fluorescence")
ggplot(oxygen, aes(x = O2, y = Fo.F)) + geom_point() +xlab("Oxygen (%)")+ylab("Relative Fluorescence")
ggplot(oxygen, aes(x = O2, y = Fo.F)) + geom_point() +xlab("Oxygen (%)")+ylab("Relative Fluorescence")+geom_density()+theme_classic()
ggplot(data=oxygen, aes(x = O2, y = Fo.F)) + geom_point() +xlab("Oxygen (%)")+ylab("Relative Fluorescence")+geom_density()+theme_classic()
oxygen
ggplot(data=oxygen, aes(x = O2., y = Fo.F)) + geom_point() +xlab("Oxygen (%)")+ylab("Relative Fluorescence")+geom_density()+theme_classic()
oxygen <- read.table("Oxygen.txt", header= T, sep = "\t", stringsAsFactors=FALSE)
ggplot(data=oxygen, aes(x = O2, y = RF)) + geom_point() +xlab("Oxygen (%)")+ylab("Relative Fluorescence")+geom_density()+theme_classic()
ggplot(data=oxygen, aes(x = O2, y = RF)) + geom_point() +xlab("Oxygen (%)")+ylab("Relative Fluorescence")+theme_classic()
ggplot(data=oxygen, aes(x = O2, y = RF)) + geom_point() + geome_smooth(se =F, method='lm')+xlab("Oxygen (%)")+ylab("Relative Fluorescence")+theme_classic()
ggplot(data=oxygen, aes(x = O2, y = RF)) + geom_point() +xlab("Oxygen (%)")+ylab("Relative Fluorescence")+stat_smooth(method="lm")+theme_classic()
ggplot(data=oxygen, aes(x = O2, y = RF)) + geom_point() +xlab("Oxygen (%)")+ylab("Relative Fluorescence")+theme_classic()+geom_smooth(se=F,method="lm")
ggplot(data=data, aes(x = region, y = observations)) + geom_scatterplot()+ geom_jitter() +xlab("Region")+ylab("Observations")+theme_classic()
ggplot(data=data, aes(x = region, y = observations)) + geom_point()+ geom_jitter() +xlab("Region")+ylab("Observations")+theme_classic()
ggplot(data=data, aes(x = region, y = observations)) + geom_point()+ geom_jitter() +xlab("Region")+ylab("Observations")
+theme_classic()
ggplot(data=data, aes(x = region, y = observations)) + geom_point()+ geom_jitter() +xlab("Region")+ylab("Observations")+theme_classic()
ggplot(data=data, aes(x = region, y = observations)) + geom_bar(position="dodge",stat="summary",fun= "mean")+ +xlab("Region")+ylab("Observations")+theme_classic()
ggplot(data=data, aes(x = region, y = observations)) + geom_bar(position="dodge",stat="summary",fun= "mean") +xlab("Region")+ylab("Observations")+theme_classic()
setwd("/Users/elias/Downloads")
ggplot(data=oxygen, aes(x = O2, y = RF)) + geom_point() +xlab("Oxygen (%)")+ylab("Relative Fluorescence")+theme_classic()+geom_smooth(se=F,method="lm")
ggplot(data=oxygen, aes(x = O2, y = RF)) + geom_point() +xlab("Oxygen (%)")+ylab("Relative Fluorescence")+theme_classic()+geom_smooth(method="lm")
se=F,
ggplot(data=oxygen, aes(x = O2, y = RF)) + geom_point() +xlab("Oxygen (%)")+ylab("Relative Fluorescence")+theme_classic()+geom_smooth(se=F,method="lm")
#
ggplot(data=data, aes(x = region, y = observations)) + geom_point()+ geom_jitter() +xlab("Region")+ylab("Observations")+theme_classic()
#
ggplot(data=data, aes(x = region, y = observations)) + geom_point()+ geom_jitter() +theme_classic()
#Load bar cha
ggplot(data=data, aes(x = region, y = observations)) + geom_bar(position="dodge",stat="summary",fun= "mean") +xlab("Region")+ylab("Observations")+theme_classic()
#Load bar cha
ggplot(data=data, aes(x = region, y = observations)) + geom_bar(position="dodge",stat="summary",fun.y= "mean") +xlab("Region")+ylab("Observations")+theme_classic()
target <- sample(1:100,1)
target <- sample(1:100,1)
target <- sample(1:100,1)
print("I'm thinking of a number 1-100...")
for (i in 1:11) {
guess<-readline("Guess:")
if(guess> target){
print("Lower")
}
elif (guess<target){
print("I'm thinking of a number 1-100...")
for (i in 1:11) {
guess<-readline("Guess:")
if(guess> target){
print("Lower")
}
elif (guess<target){
print("I'm thinking of a number 1-100...")
for (i in 1:11) {
guess<-readline("Guess:")
if(guess> target){
print("Lower")
}
elif (guess<target){
for (i in 1:11) {
guess<-readline("Guess:")
if(guess>target){
print("Lower")
}
elif (guess<target){
for (i in 1:11) {
guess<-readline("Guess:")
if(guess>target){
print("Lower")
}elif (guess<target){
print("I'm thinking of a number 1-100...")
for (i in 1:11) {
guess<-readline("Guess:")
if(guess>target){
print("Lower")
}elif(guess<target){
print("I'm thinking of a number 1-100...")
for (i in 1:11) {
guess<-readline("Guess:")
if(guess>target){
print("Lower")
}else if(guess<target){
print("Higher")
}else{
print("Correct!")
break
}
)
for (i in 1:11){
guess<-readline("Guess:")
if(guess>target){
print("Lower")
}else if(guess<target){
print("Higher")
}else{
print("Correct!")
break
}
)
for (i in 1:11){
guess<-readline("Guess:")
if(guess>target){
print("Lower")
}else if(guess<target){
print("Higher")
}else{
print("Correct!")
break
}
print("I'm thinking of a number 1-100...")
for (i in 1:11){
guess<-readline("Guess:")
if(guess>target){
print("Lower")
}else if(guess<target){
print("Higher")
}else{
print("Correct!")
break
}}
for (i in 1:11){
guess<-readline("Guess:")
if(guess>target){
print("Lower")
}else if(guess<target){
print("Higher")
}else{
print("Correct!")
break
}}
#Set Working Directory
setwd("/Users/elias/Downloads")
guess<-readline("Guess:")
if(guess>target){
print("Lower")
}else if(guess<target){
print("Higher")
}else{
print("Correct!")
break
}}
#Set Working Directory
setwd("/Users/elias/Downloads/Rproject")
dir("countryY")
compileCSV<- function(directory){
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep ="/"))
write.table(data2, file = (paste(directory,"all_Data.csv", sep ="/")), append =T, row.names = F, col.names = F, sep = ",")
}
}
compileCSV("countryY")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep ="/"))
if(first==TRUE){
write.table(data2, file = (paste(directory,"all_Data.csv", sep ="/")), append =T, row.names = F, col.names = F, sep = ",")
}
}
}
compileCSV("countryY")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep ="/"))
if(first==FALSE){
write.table(data2, file = (paste(directory,"all_Data.csv", sep ="/")), append =T, row.names = F, col.names = F, sep = ",")
}
else{
first = FALSE
write.table(data2, file = (paste(directory,"all_Data.csv", sep ="/")), append =F, row.names = F, col.names = T, sep = ",")
}
}
}
compileCSV("countryY")
dir("countryY")
data2 <- read.csv(paste("countryY","screen_122.csv", sep ="/"))
data2
write.table(data2, file = (paste(countryY,"allData.csv", sep ="/")), append =F, row.names = F, col.names = T, sep = ",")
write.table(data2, file = (paste("countryY","allData.csv", sep ="/")), append =F, row.names = F, col.names = T, sep = ",")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep ="/"))
if(first==FALSE){
write.table(data2, file = (paste(directory,"allData.csv", sep ="/")), append =T, row.names = F, col.names = F, sep = ",")
}
else{
first = FALSE
write.table(data2, file = (paste(directory,"allData.csv", sep ="/")), append =F, row.names = F, col.names = T, sep = ",")
}
}
}
compileCSV("countryY")
data2
write.table(data2, file = (paste("countryY","allData.csv", sep ="/")), append =F, row.names = F, col.names = T, sep = ",")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep ="/"))
if(first==FALSE){
write.table(data2, file = (paste(directory,"allData.csv", sep ="/")), append =T, row.names = F, col.names = F, sep = ",")
}
else{
first = FALSE
write.csv(data2, file = (paste(directory,"allData.csv", sep ="/")), quote=F, row.names=F, sep = ",")
}
}
}
compileCSV("countryY")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep ="/"))
if(first==FALSE){
write.table(data2, file = (paste(directory,"allData.csv", sep ="/")), append =T, row.names = F, col.names = T, sep = ",", strings)
}
else{
first = FALSE
write.csv(data2, file = (paste(directory,"allData.csv", sep ="/")), quote=F, row.names=F, sep = ",")
}
}
}
compileCSV("countryY")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep ="/"))
if(first==FALSE){
write.table(data2, file = (paste(directory,"allData.csv", sep ="/")), append =T, row.names = F, col.names = T, sep = ",", strings)
}
else{
first = FALSE
write.csv(data2, file = (paste(directory,"allData.csv", sep ="/")), quote=F, row.names=F, sep = ",")
}
}
}
compileCSV("countryY")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep ="/"))
if(first==FALSE){
write.table(data2, file = (paste(directory,"/", "allData.csv")), append =T, row.names = F, col.names = T, sep = ",", strings)
}
else{
first = FALSE
write.csv(data2, file = (paste(directory,"/","allData.csv")), quote=F, row.names=F, sep = ",")
}
}
}
compileCSV("countryY")
compileCSV("countryY")
dir("countryY")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep ="/"))
if(first==FALSE){
write.table(data2, file = (paste(directory,"allData.csv", sep ="/")), append =T, row.names = F, col.names = T, sep = ",", strings)
}
else{
first = FALSE
write.csv(data2, file = (paste(directory,"allData.csv", sep ="/")), quote=F, row.names=F, sep = ",")
}
}
}
compileCSV("countryY")
compileCSV("countryY")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep ="/"))
if(first==FALSE){
write.table(data2, file = (paste(directory,"allData.csv", sep ="/")), append =T, row.names = F, col.names = T, sep = ",", strings)
}
else{
write.csv(data2, file = (paste(directory,"allData.csv", sep ="/")), quote=F, row.names=F, col.names = T, sep = ",")
}
}
}
compileCSV("countryY")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep ="/"))
if(first==FALSE){
write.table(data2, file = (paste(directory,"allData.csv", sep ="/")), append =T, row.names = F, col.names = F, sep = ",", strings)
}
else{
first = FALSE
write.csv(data2, file = (paste(directory,"allData.csv", sep ="/")), quote=F, row.names=F, col.names = T, sep = ",")
}
}
}
compileCSV("countryY")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep ="/"))
if(first==FALSE){
write.table(data2, file = (paste(directory,"allData.csv", sep ="/")), append =T, row.names = F, col.names = F, sep = ",", strings)
}
else{
first = FALSE
write.csv(data2, file = (paste(directory,"/allData.csv")), quote=F, row.names=F, col.names = T, sep = ",")
}
}
}
compileCSV("countryY")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep = "/"))
if(first==FALSE){
write.table(data2, file = (paste(directory,"allData.csv", sep ="/")), append =T, row.names = F, col.names = F, sep = ",", strings)
}
else{
first = FALSE
write.csv(data2, file = (paste(directory,"allData.csv", sep ="/" )), quote=F, row.names=F, col.names = T, sep = ",")
}
}
}
compileCSV("countryY")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep = "/"))
if(first==FALSE){
write.table(data2, file = (paste(directory,"allData.csv", sep ="/")), append =T, row.names = F, col.names = F, sep = ",", strings)
}
else{
first = FALSE
write.table(data2, file = (paste(directory,"allData.csv", sep ="/" )), quote=F, row.names=F, col.names = T, sep = ",")
}
}
}
compileCSV("countryY")
compileCSV<- function(directory){
first = TRUE
destination = "allData.csv"
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep = "/"))
if(first==FALSE){
write.table(data2, file = (paste(directory,destination, sep ="/")), append =T, row.names = F, col.names = F, sep = ",", strings)
}
else{
first = FALSE
write.table(data2, file = (paste(directory,destination, sep ="/" )), quote=F, row.names=F, col.names = T, sep = ",")
}
}
}
compileCSV("countryY")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep = "/"))
if(first==FALSE){
write.table(data2, file = paste(directory,"allData.csv", sep ="/"), append =T, row.names = F, col.names = F, sep = ",", strings)
}
else{
first = FALSE
write.table(data2, file = paste(directory,"allData.csv", sep ="/" ), quote=F, row.names=F, col.names = T, sep = ",")
}
}
}
compileCSV("countryY")
dir("countryY")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep = "/"))
if(first==FALSE){
write.table(data2, file = paste(directory,"allData.csv", sep ="/"), append =T, row.names = F, col.names = F, sep = ",", strings)
}
else{
first = FALSE
write.table(data2, file = paste(directory,"allData.csv", sep ="/"), quote=F, row.names=F, col.names = T, sep = ",")
}
}
}
convertDelimiter("countryY")
convertDelimiter<- function(directory){
filedir <- dir(path = directory, pattern = ".txt")
for(i in filedir){
data <- read.table(paste(directory,i, sep ="/" ), header = T, sep = "")
write.csv(data, file = paste(directory, sub(".txt",".csv", i), sep ="/"), quote=F, row.names=F, sep = ",")
file.remove(paste(directory,i, sep ="/" ))
}
}
convertDelimiter("countryY")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep = "/"))
if(first==FALSE){
write.table(data2, file = paste(directory,"allData.csv", sep ="/"), append =T, row.names = F, col.names = F, sep = ",", strings)
}
else{
first = FALSE
write.table(data2, file = paste(directory,"allData.csv", sep ="/"), quote=F, row.names=F, col.names = T, sep = ",")
}
}
}
compileCSV("countryY")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep = "/"))
if(first==FALSE){
write.table(data2, file = paste(directory,"allData.csv", sep ="/"), append =T, row.names = F, col.names = T, sep = ",", strings)
}
else{
first = FALSE
write.table(data2, file = paste(directory,"allData.csv", sep ="/"), quote=F, row.names=F, col.names = T, sep = ",")
}
}
}
compileCSV("countryY")
compileCSV<- function(directory){
first = TRUE
filedir <- dir(path = directory, pattern = ".csv")
for(i in filedir){
data2 <- read.csv(paste(directory,i, sep = "/"))
if(first==FALSE){
write.table(data2, file = paste(directory,"allData.csv", sep ="/"), append =T, row.names = F, col.names = F, sep = ",", strings)
}
else{
first = FALSE
write.table(data2, file = paste(directory,"allData.csv", sep ="/"), quote=F, row.names=F, col.names = T, sep = ",")
}
}
}
compileCSV("countryY")
compileCSV("countryY")
data2 <- read.csv(paste("countryY","/","screen_122.csv", sep =""))
write.table(data2, file = paste("countryY","allData.csv", sep ="/"), append = F, row.names = F, col.names = T, sep = ",")
